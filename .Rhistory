mutate(age = ifelse(age == "-65", "+65", age))
who %>%
pivot_longer(-c(country:year),
names_to = "type",
values_to = "cases") %>%
mutate(type = str_replace(type, "newrel", "new_rel")) %>%
separate(type, into = c("new", "type", "sex_age"), sep = "_") %>%
separate(sex_age, into = c("sex", "age", ), sep = 1) %>%
separate(age, into = c("min_age", "max_age"), sep = -2) %>%
unite(age, min_age, max_age, sep = "-") %>%
mutate(age = ifelse(age == "-65", "+65", age))
view(who)
who %>%
pivot_longer(-c(country:year), names_to = "type", values_to = "cases") %>%
mutate(type = str_replace(type, "newrel", "new_rel")) %>%
separate(type, into = c("new", "type", "sex_age"), sep = "_") %>%
separate(sex_age, into = c("sex", "age", ), sep = 1) %>%
mutate(sex=str_to_upper(sex)) %>%
separate(age, into = c("min_age", "max_age"), sep = -2) %>%
unite(age, min_age, max_age, sep = "-") %>%
mutate(age = ifelse(age == "-65", "+65", age))
who %>%
pivot_longer(-c(country:year), names_to = "type", values_to = "cases") %>%
mutate(type = str_replace(type, "newrel", "new_rel")) %>%
separate(type, into = c("new", "type", "sex_age"), sep = "_") %>%
separate(sex_age, into = c("sex", "age" ), sep = 1) %>%
mutate(sex=str_to_upper(sex)) %>%
separate(age, into = c("min_age", "max_age"), sep = -2) %>%
unite(age, min_age, max_age, sep = "-") %>%
mutate(age = ifelse(age == "-65", "+65", age))
tidy_who <- who %>%
pivot_longer(-c(country:year), names_to = "type", values_to = "cases") %>%
mutate(type = str_replace(type, "newrel", "new_rel")) %>%
separate(type, into = c("new", "type", "sex_age"), sep = "_") %>%
separate(sex_age, into = c("sex", "age" ), sep = 1) %>%
mutate(sex=str_to_upper(sex)) %>%
separate(age, into = c("min_age", "max_age"), sep = -2) %>%
unite(age, min_age, max_age, sep = "-") %>%
mutate(age = ifelse(age == "-65", "+65", age))
world
tidy_who %>%
left_join(world, by = c("iso2" = "iso_a2"))
tidy_who %>%
filter(year== 2005, !is.na(cases)) %>%
left_join(world, by = c("iso2" = "iso_a2"))
ggplot()+
geom_sf(aes(geometry = geom))
tidy_who %>%
filter(year== 2005, !is.na(cases)) %>%
left_join(world, by = c("iso2" = "iso_a2"))
ggplot()+
geom_sf(data = world, aes(geometry = geom))
geom_sf(aes(geometry = geom))
tidy_who %>%
filter(year== 2005, !is.na(cases)) %>%
group_by(iso2) %>%
summarise(cases= sum(cases)) %>%
left_join(world, by = c("iso2" = "iso_a2"))
ggplot()+
geom_sf(data = world, aes(geometry = geom))
geom_sf(aes(geometry = geom, fill = cases))
tidy_who %>%
filter(year== 2013, !is.na(cases)) %>%
group_by(iso2) %>%
summarise(cases = sum(cases, na.rm = TRUE)) %>%
left_join(world, by = c("iso2" = "iso_a2")) %>%
ggplot()+
geom_sf(data = world, aes(geometry = geom))
geom_sf(aes(geometry = geom, fill = cases))
tidy_who %>%
filter(year== 2013, !is.na(cases)) %>%
group_by(iso2) %>%
summarise(cases = sum(cases, na.rm = TRUE)) %>%
left_join(world, by = c("iso2" = "iso_a2")) %>%
ggplot()+
geom_sf(data = world, aes(geometry = geom))+
geom_sf(aes(geometry = geom, fill = cases))
tidy_who %>%
filter(year== 2013, !is.na(cases)) %>%
group_by(iso2) %>%
summarise(cases = sum(cases, na.rm = TRUE)) %>%
left_join(world, by = c("iso2" = "iso_a2")) %>%
ggplot()+
geom_sf(data = world, aes(geometry = geom), fill = "lightgrey")+
geom_sf(aes(geometry = geom, fill = cases)) +
scale_fill_gradient(low = "#fff7bc", high = "red",
labels = number_format(scale = 1/1000,
suffix = "k"),
guide = "legend")
tidy_who %>%
filter(year== 2013, !is.na(cases)) %>%
group_by(iso2) %>%
summarise(cases = sum(cases, na.rm = TRUE)) %>%
left_join(world, by = c("iso2" = "iso_a2")) %>%
ggplot()+
geom_sf(data = world, aes(geometry = geom), fill = "lightgrey")+
geom_sf(aes(geometry = geom, fill = cases)) +
scale_fill_gradient(low = "#fff7bc", high = "red",
labels = number_format(scale = 1/1000,
suffix = "k"),
guide = "legend") +
theme_map()+
theme(panel.background = element_rect(fill = "lightblue"),
legend.position = "right") +
labs(fill = "# de casos",
title = "casos de tuberculose",
caption = "Fonte: World Health Organization"))
tidy_who %>%
filter(year== 2013, !is.na(cases)) %>%
group_by(iso2) %>%
summarise(cases = sum(cases, na.rm = TRUE)) %>%
left_join(world, by = c("iso2" = "iso_a2")) %>%
ggplot()+
geom_sf(data = world, aes(geometry = geom), fill = "lightgrey")+
geom_sf(aes(geometry = geom, fill = cases)) +
scale_fill_gradient(low = "#fff7bc", high = "red",
labels = number_format(scale = 1/1000,
suffix = "k"),
guide = "legend") +
theme_map()+
theme(panel.background = element_rect(fill = "lightblue"),
legend.position = "right") +
labs(fill = "# de casos",
title = "casos de tuberculose",
caption = "Fonte: World Health Organization")
tidy_who %>%
filter(year== 2013, !is.na(cases)) %>%
group_by(iso2) %>%
summarise(cases = sum(cases, na.rm = TRUE)) %>%
left_join(world, by = c("iso2" = "iso_a2")) %>%
ggplot()+
geom_sf(data = world, aes(geometry = geom), fill = "lightgrey")+
geom_sf(aes(geometry = geom, fill = cases)) +
scale_fill_gradient(low = "#fff7bc", high = "red",
labels = number_format(scale = 1/1000,
suffix = "k"),
guide = "legend") +
theme_map()+
theme(panel.background = element_rect(fill = "lightblue"),
legend.position = "right") +
labs(fill = "# de casos",
title = "Casos de Tuberculose",
caption = "Fonte: World Health Organization")
world
view(world)
view(who)
view(tidy_who)
source('~/Documents/R Studio/Cap 1 Dados.R')
source('~/Cap 3 Dplyr.R')
source('~/Documents/R Studio/Tidy Data.R')
library(nycflights13)
library(tidyverse)
library(Lahman)
view(Lahman)
batting <- as_tibble(Lahman::Batting)
view(batting)
View(batting)
View(batting)
batters <- batting %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
batters <- batting %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
)
batting <- as_tibble(Lahman::Batting)
batters <- batting %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE))
batters %>%
filter(ab>100) %>%
ggplot(mapping = aes(x=ab, y=ba)) +
geom_point()+
geom_smooth(se=FALSE)
not_cancelled %>%
group_by(year, month, day) %>%
summarise(avg_delay1 = mean(arr_delay),
avg_delay2 = mean(arr_delay[arr_delay > 0]))
view(not_cancelled)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay, na.rm = TRUE),
n = n()
)
ggplot(data = delays, mapping = aes(x=n, y=delay)) +
geom_point(alpha = 1/10)
delays %>%
filter(n>25) %>%
ggplot(mapping = aes(x=n, y=delay)) +
geom_point(alpha=1/10)
not_cancelled %>%
group_by(year, month, day) %>%
summarise(avg_delay1 = mean(arr_delay),
avg_delay2 = mean(arr_delay[arr_delay > 0]))
not_cancelled %>%
group_by(dest) %>%
summarise(distance_sd = sd(distance)) %>%
arrange(desc(distance_sd))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(
first = min(dep_time),
last = max(dep_time)
)
not_cancelled %>%
group_by(year, month, day) %>%
summarise(
first_dep = first(dep_time),
last_dep = last(dep_time)
)
not_cancelled %>%
group_by(dest) %>%
summarise(carriers = n_distinct(carrier)) %>%
arrange(desc(carriers))
not_cancelled %>%
count(dest)
not_cancelled %>%
count(tailnum, wt = distance)
not_cancelled %>%
group_by(year, month, day) %>%
summarise(n_early = sum(dep_time<500))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(hour_per = mean(arr_delay > 60))
daily <- group_by(flights, year, month, day)
(per_day <- summarise(daily, flights=n()))
(per_month <- summarise(per_day, flights = sum(flights)))
(per_month <- summarise(per_day, flights = sum(flights)))
(per_year <- summarise(per_month, flights = sum(flights)))
daily %>%
ungroup() %>%
summarise(flights = n())
flights_small <- select(flights, year:day, ends_with("delay"), distance, air_time)
mutate(flights_small, gain = arr_delay - dep_delay, speed = distance / air_time*60)
mutate(flights_small,
gain = arr_delay - dep_delay,
hours = air_time/60,
gain_per_hour = gain / hours)
flights_small %>%
group_by(year, month, day) %>%
filter(rank(desc(arr_delay))<10)
popular_dests <- flights %>%
group_by(dest) %>%
filter(n()>365)
popular_dests
popular_dests %>%
filter(arr_delay > 0) %>%
mutate(prop_delay = arr_delay/sum(arr_delay)) %>%
select(year::day, dest, arr_delay, prop_delay)
popular_dests %>%
filter(arr_delay > 0) %>%
mutate(prop_delay = arr_delay/sum(arr_delay)) %>%
select(year:day, dest, arr_delay, prop_delay)
vignette("window-functions")
source('~/Cap 3 Dplyr.R')
library(tidyverse)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x= cut))
diamonds %>%
count(cut)
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x= carat), binwidth = 0.5)
diamonds %>%
count(cut_width(carat, 0.5))
smaller <- diamonds %>%
filter(carat < 3)
ggplot(data = smaller, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.1)
ggplot(data = smaller, mapping = aes(x = carat, color = cut)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = smaller, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)+
coord_cartesian(yylim = c(0,50))
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)+
coord_cartesian(ylim = c(0,50))
unsual <- diamonds %>%
filter(y>3 |y>20) %>%
arrange(y)
unsual
unsual <- diamonds %>%
filter(y<3 |y>20) %>%
arrange(y)
unsual
diamonds2 <-diamonds %>%
filter(between(y,3,20))
diamonds2 <- diamonds %>%
mutate(y = ifelse(y<3|y>20, NA, y))
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) +
geom_point()
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) +
geom_point(na.rm = TRUE)
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(
mapping = aes(color = cancelled),
binwidth = 1/4
)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly(mapping = aes(color = cut), binwidth = 500)
ggplot(diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds,mapping = aes(x = price, y = ..density..)) +
geom_freqpoly(mapping = aes(color = cut), binwidth = 500)
ggplot(data = diamonds,mapping = aes(x = cut, y = price)) +
geom_boxplot()
ggplot(data=mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg) +
geom_boxplot(
mapping = aes(
x=reorder(class, hwy, FUN = median),
y = hwy))
ggplot(data = mpg) +
geom_boxplot(
mapping = aes(
x=reorder(class, hwy, FUN = median),
y = hwy)) +
coord_flip()
install.packages("ggstance")
#install.packages("ggstance")
install.packages("lvplot")
ggplot(data=diamonds) +
geom_count(mapping = aes(x=cut, y=color))
diamonds %>%
count(color, cut)
diamonds %>%
count(color, cut) %>%
ggplot(mapping = aes(x=color, y=cut)) +
geom_tile(mapping = aes(fill=n))
install.packages("seriation")
installed.packages("d3heatmap")
install.packages("heatmaply")
geom_point(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price),
alpha = 1/100)
install.packages("hexbin")
ggplot(data = diamonds) +
geom_bin2d(mapping = aes(x = carat, y = price))
ggplot(data = smaller) +
geom_bin2d(mapping = aes(x = carat, y = price))
ggplot(data = smaller) +
geom_hex(mapping = aes(x = carat, y = price))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes( varwidth= TRUE))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1), varwidth= TRUE))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_number(carat, 20)))
ggplot(data = faithful) +
geom_point(mapping = aes(x= eruptions, y= waiting))
library(modelr)
mod <- lm(log(price) ~ log(carat), data = diamonds)
diamonds2 <- diamonds %>%
add_residuals(mod) %>%
mutate(resid = exp(resid))
ggplot(data = diamonds2) +
geom_point(mapping = aes(x = cut, y = resid))
ggplot(data = diamonds2) +
geom_point(mapping = aes(x = cut, y = resid))
mod <- lm(log(price) ~ log(carat), data = diamonds)
diamonds2 <- diamonds %>%
add_residuals(mod) %>%
mutate(resid = exp(resid))
ggplot(data = diamonds2) +
geom_point(mapping = aes(x = cut, y = resid))
ggplot(data = faithful, mapping = aes(x=eruptions)) +
geom_freqpoly(binwidth = 0.25)
ggplot(faithful, aes(eruptions)) +
geom_freqpoly(bindwidth = 0.25)
ggplot(faithful, aes(eruptions)) +
geom_freqpoly(binwidth = 0.25)
diamonds %>%
count(cut, clarity) %>%
ggplot(aes(clarity, cut, fill = n)) +
geom_tile()
getwd()
source('~/Documents/R Studio/Cap 5 AED.R')
library(tidyverse)
library(nycflights13)
flights
airlines
airports
planes
weather
planes %>%
count(tailnum)
planes %>%
count(tailnum) %>%
filter(n>1)
weather %>%
count(year, month, day, hour, origin) %>%
filter(n>1)
flights %>%
count(year, month, day, flight) %>%
filter(n>1)
flights %>%
count(year, month, day, tailnum) %>%
filter(n>1)
flights %>%
mutate(id = row_number()) %>%
select(id, everything())
alunos <- tibble(nome = c("joão", "maria", "josé", "francisco"),
cod= c("INS", "GV", "PUC", "FEA", "INS"))
escolas <-  tibble(cod= c("FGV", "INS", "UAM"),
inst= c("Getulio Vargas", "INSPER", "Economia USP", "Anhembi"))
alunos <- tibble(nome = c("joão", "maria", "josé", "francisco"),
cod= c("INS", "GV", "PUC", "FEA", "INS"))
alunos <- tibble(nome = c("joão", "maria", "josé", "francisco", "pedro"),
cod= c("INS", "GV", "PUC", "FEA", "INS"))
escolas <-  tibble(cod= c("FGV", "INS", "UAM"),
inst= c("Getulio Vargas", "INSPER", "Economia USP", "Anhembi"))
escolas <-  tibble(cod= c("FGV", "INS", "UAM", "FEA"),
inst= c("Getulio Vargas", "INSPER", "Economia USP", "Anhembi"))
alunos %>%
left_join(escolas, by=c("cod" = "cod"))
alunos <- tibble(nome = c("joão", "maria", "pedro", "josé", "francisco"),
cod= c("INS", "FGV", "PUC", "FEA", "INS"))
escolas <-  tibble(cod= c("FGV", "INS", "FEA", "UAM"),
inst= c("Getulio Vargas", "INSPER", "Economia USP", "Anhembi"))
alunos %>%
left_join(escolas, by=c("cod" = "cod"))
alunos %>%
right_join(escolas, by=c("cod" = "cod"))
alunos <- tibble(nome = c("João", "Maria", "Pedro", "José", "Francisco"),
cod= c("INS", "FGV", "PUC", "FEA", "INS"))
escolas <-  tibble(cod= c("FGV", "INS", "FEA", "UAM"),
inst= c("Getulio Vargas", "INSPER", "Economia USP", "Anhembi"))
alunos %>%
left_join(escolas, by=c("cod" = "cod"))
alunos %>%
right_join(escolas, by=c("cod" = "cod"))
alunos %>%
inner_join(escolas, by = c("cod"="cod"))
alunos %>%
full_join(escolas, by = c("cod"="cod"))
alunos %>%
left_join(escolas)
alunos %>%
semi_join(escolas, by = "cod")
alunos %>%
anti_join(escolas, by = "cod")
flights2 %>%
select(year:day, hour, origin, dest, tailnum, carrier)
flights2 <- flights %>%
select(year:day, hour, origin, dest, tailnum, carrier)
flights2
flights2 %>%
left_join(airlines, by= "carrier")
weather
flights2 %>%
left_join(airlines, by="carrier") %>%
left_join(weather, by= c("year", "month", "day", "hour", "origin"))
airports
airports %>%
semi_join(flights, by = c("faa" = "dest"))
airports %>%
semi_join(flights, by = c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point() +
coord_quickmap()+
theme_void()
library(lubridate)
source('~/Documents/Rstudio/Junção de dados.R')
library(tidyverse)
library(ggplot2)
library(scales)
library(ggthemes)
library(gganimate)
library(spData)
library(gganimate)
library(readr)
library(readxl)
library(transformr)
library(lubridate)
library(gganimate)
library(plotly)
install.packages("plotly")
coffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-07/coffee_ratings.csv')
ggplot(data = coffee_ratings) +
geom_point(mapping = aes(x = balance, y = total_cup_points, color = country_of_origin))
graf_aroma <- ggplot(data = coffee_ratings) +
geom_point(mapping = aes(x = aroma, y = total_cup_points, color = country_of_origin), show.legend = FALSE)
ggplotly(graf_aroma, tooltip = c("country_of_origin", "aroma"))
